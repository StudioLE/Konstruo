[workspace]
resolver = "2"
members = [
    "beach_app",
    "beach_civil",
    "beach_core",
    "beach_geography",
    "beach_ui",
]

[workspace.dependencies]
bevy = { version = "0.15.1", features = ["dynamic_linking"] }
bevy_mod_picking = "0.20.1"
kurbo = "0.11.0"
lazy_static = "1.5.0"

[profile.dev]
opt-level = 1

[profile.dev.package."*"]
opt-level = 3

[workspace.lints.rust]
unused = "allow"

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }
#restriction = { level = "warn", priority = -2 }

similar_names = "allow"
module_inception = "allow"
just_underscores_and_digits = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"
cast_possible_truncation = "allow"
match_same_arms = "allow"
if_not_else = "allow"
enum_glob_use = "allow"
needless_pass_by_value = "allow"
unwrap_used = "warn"
missing_docs_in_private_items = "allow"
implicit_return = "allow"
expect_used = "allow"
indexing_slicing = "warn"
if_then_some_else_none = "allow"
str_to_string = "warn"
missing_inline_in_public_items = "allow"
question_mark_used = "allow"
single_call_fn = "allow"
non_ascii_literal = "allow"
shadow_reuse = "allow"
shadow_same = "allow"
shadow_unrelated = "allow"
exhaustive_enums = "allow"
exhaustive_structs ="allow"
std_instead_of_core = "allow"
std_instead_of_alloc = "allow"
tests_outside_test_module = "allow"
pub_use = "allow"
string_add = "allow"
mod_module_files = "allow"
wildcard_enum_match_arm = "warn"
unneeded_wildcard_pattern = "warn"
panic = "allow"
as_conversions = "allow"
absolute_paths = "allow"
get_first = "warn"
pattern_type_mismatch = "allow"
arithmetic_side_effects = "allow"
new_without_default = "allow"
integer_division = "warn"
separated_literal_suffix = "allow"
unseparated_literal_suffix = "warn"
# TODO COULD re-consider the following allows:
result_large_err = "allow"
clone_on_ref_ptr = "allow"
unused_self = "allow"
wildcard_imports = "allow"
missing_errors_doc = "allow"
# TODO SHOULD investigate solution to await_holding_lock
await_holding_lock = "allow"
